____________________disjunction____
using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};

for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
        elseif(P[i]=='T'&&Q[i]=='t')
          cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'f'<<endl;
}



}
____________________conjunction____
using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};

for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        elseif(P[i]=='T'&&Q[i]=='T')
          cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
}



}











//_____________________________conditional______
/*
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};
cout<<"\n";
cout<<"Conditional"<<endl;
cout<<"P"<<'\t'<<"Q"<<'\t'<<"P->Q"<<endl;

for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
}

*/

//_____________________________BIconditional______
/*
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};
cout<<"\n";
cout<<"BIConditional"<<endl;
cout<<"P"<<'\t'<<"Q"<<'\t'<<"P<->Q"<<endl;

for(int i=0;i<4;i++){

    if(P[i]==Q[i])
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
}
}

*/
//_____________________________CONVERSE______
/*
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};
cout<<"\n";
cout<<"CONVERSE"<<endl;
cout<<"P"<<'\t'<<"Q"<<'\t'<<"Q->P"<<endl;

for(int i=0;i<4;i++){


    if(P[i]=='F'&&Q[i]=='T')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
}
}
*/

//_______________________________INVERSE_______

/*
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};
cout<<"\n";
cout<<"INVERSE"<<endl;
cout<<"~P"<<'\t'<<"~Q"<<'\t'<<"~P->~Q"<<endl;

for(int i=0;i<4;i++){

    if(P[i]=='T'){
        P[i]='F';
    }
    else
        P[i]='T';


}
for(int i=0;i<4;i++){

    if(Q[i]=='T'){
        Q[i]='F';
    }
    else
        Q[i]='T';
}

for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;

}
}

*/

_________________________________________________P->Q=~Q->~P__________________________________
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};
cout<<"\n";
cout<<"Conditional"<<endl;
cout<<"P"<<'\t'<<"Q"<<'\t'<<"P->Q"<<endl;

for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
}

for(int i=0;i<4;i++){

    if(P[i]=='T'){
        P[i]='F';
    }
    else
        P[i]='T';


}
for(int i=0;i<4;i++){

    if(Q[i]=='T'){
        Q[i]='F';
    }
    else
        Q[i]='T';
}


cout<<"~Q"<<'\t'<<"~P"<<'\t'<<"~Q->~P__________________________________"<<endl;
for(int i=0;i<4;i++){

   if(P[i]=='T'&&Q[i]=='F')
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
}


}
*/



__________________________________________ ( (P->Q)  V  (P->R) )  = ( P -> (Q V R) )_____________

#include<iostream>

using namespace std;

int main(){

char P[9]={'T','F','T','F','T','F','T','F'};
char Q[9]={'T','T','F','F','T','T','F','F'};
char R[9]={'T','T','T','T','F','F','F','F'};

//for left hand side



cout<<"\nP"<<'\t'<<"Q"<<'\t'<<"P->Q"<<endl;
char A[9]={};
for(int i=0;i<8;i++){

    if(P[i]=='T'&&Q[i]=='F'){
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        A[i]='F';
}
    else{
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
           A[i]='T';
    }
}


char B[9]={};

cout<<"\nP"<<'\t'<<"R"<<'\t'<<"P->R"<<endl;
for(int i=0;i<8;i++){

    if(P[i]=='T'&&R[i]=='F'){
        cout<<P[i]<<'\t'<<R[i]<<'\t'<<'F'<<endl;
         B[i]='F';
    }
    else
    {
       cout<<P[i]<<'\t'<<R[i]<<'\t'<<'T'<<endl;
         B[i]='T';
    }

}

cout<<" \n P->Q"<<'\t'<<"P->R"<<'\t'<<"P->Q V  P->R"<<endl;


for(int i=0;i<8;i++){
if(A[i]=='F'&&B[i]=='F'){
        cout<<A[i]<<'\t'<<B[i]<<'\t'<<'F'<<endl;
    }
    else{
        cout<<A[i]<<'\t'<<B[i]<<'\t'<<'T'<<endl;
    }

}


//for right hand side
char C[9]={};
cout<<"\nQ"<<'\t'<<"R"<<'\t'<<"Q V R"<<endl;
for(int i=0;i<8;i++){
if(Q[i]=='F'&&R[i]=='F'){
        cout<<Q[i]<<'\t'<<R[i]<<'\t'<<'F'<<endl;
        C[i]='F';
    }
    else{
        cout<<Q[i]<<'\t'<<R[i]<<'\t'<<'T'<<endl;
         C[i]='T';
    }

}


cout<<"\n P "<<'\t'<<"Q V R "<<'\t'<<"P -> (Q V R)"<<endl;


for(int i=0;i<8;i++){

    if(P[i]=='T'&&C[i]=='F'){
        cout<<P[i]<<'\t'<<C[i]<<'\t'<<'F'<<endl;
}
    else{
        cout<<P[i]<<'\t'<<C[i]<<'\t'<<'T'<<endl;
    }
}
___________________________________________P<->Q = (P ^ Q) V (~P ^ ~Q ) __________________________________


/*
int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};


cout<<"P"<<'\t'<<"Q"<<'\t'<<"P<->Q"<<endl;
for(int i=0;i<4;i++){

    if(P[i]==Q[i])
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
    else
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
}

char R[4]={};

cout<<"P"<<'\t'<<"Q"<<'\t'<<"P ^ Q"<<endl;
for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='T'){

        R[i]='T';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;

    }


    else{
              R[i]='F';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    }
}

for(int i=0;i<4;i++){

    if(P[i]=='T'){
        P[i]='F';
    }
    else
        P[i]='T';


}
for(int i=0;i<4;i++){

    if(Q[i]=='T'){
        Q[i]='F';
    }
    else
        Q[i]='T';
}

char S[4]={};
cout<<"P"<<'\t'<<"Q"<<'\t'<<"~P ^ ~Q"<<endl;
for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='T'){

        S[i]='T';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;

    }


    else{
              S[i]='F';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    }
}


cout<<"P^Q"<<'\t'<<"~P ^~Q"<<'\t'<<" (P ^ Q ) V ( ~P ^ ~Q)"<<endl;


for(int i=0;i<4;i++){

   if(S[i]=='F'&&R[i]=='F'){


        cout<<S[i]<<'\t'<<R[i]<<'\t'<<'F'<<endl;

    }


    else{

        cout<<S[i]<<'\t'<<R[i]<<'\t'<<'T'<<endl;
    }
}





}
*/

__________________________________________________________________________PROVE TOUTOLOGY_______________________________________________________________________________

************************************************************    a>  (P  V Q) ^ (~P V Q) -> (Q V R)************************************************************


#include<iostream>

using namespace std;

int main(){


char P[9]={'T','F','T','F','T','F','T','F'};

char Q[9]={'T','T','F','F','T','T','F','F'};
char R[9]={'T','T','T','T','F','F','F','F'};

cout<<"Q"<<'\t'<<"R"<<'\t'<<" Q V R"<<endl;//______________________________________________  A = Q V R

char A[8]={};
for(int i=0;i<8;i++){

   if(Q[i]=='F'&&R[i]=='F'){


        cout<<Q[i]<<'\t'<<R[i]<<'\t'<<'F'<<endl;
        A[i]='F';

    }


    else{

        cout<<Q[i]<<'\t'<<R[i]<<'\t'<<'T'<<endl;
               A[i]='T';
    }
}


cout<<"p"<<'\t'<<"q"<<'\t'<<" P V Q"<<endl;//______________________________________________ B = P V Q
char B[8]={};
for(int i=0;i<8;i++){

   if(P[i]=='F'&&Q[i]=='F'){


        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        B[i]='F';

    }


    else{

        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
               B[i]='T';
    }
}




cout<<"p"<<'\t'<<"q"<<'\t'<<" ~P V Q"<<endl;//___________________________ C = ~P V Q
for(int i=0;i<8;i++){

    if(P[i]=='T'){
        P[i]='F';
    }
    else
        P[i]='T';
}


char C[8]={};
for(int i=0;i<8;i++){

   if(P[i]=='F'&&Q[i]=='F'){


        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        C[i]='F';

    }


    else{

        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
               C[i]='T';
    }
}



cout<<"P  V Q"<<'\t'<<"~P V Q"<<'\t'<<" (P  V Q) ^ (~P V Q)"<<endl;//_____________________________________D = (P V Q) ^ (~P V Q_
char D[8]={};

for(int i=0;i<8;i++){

    if(B[i]=='T'&&C[i]=='T'){

        D[i]='T';
        cout<<B[i]<<'\t'<<C[i]<<'\t'<<'T'<<endl;

    }


    else{
            D[i]='F';
        cout<<B[i]<<'\t'<<C[i]<<'\t'<<'F'<<endl;
    }
}



cout<<"(P  V Q) ^ (~P V Q) "<<'\t'<<"Q V R "<<'\t'<<" (P  V Q) ^ (~P V Q) -> (Q V R) "<<endl;//_____________________________________(P  V Q) ^ (~P V Q) -> (Q V R)



for(int i=0;i<8;i++){
if(D[i]=='T'&&A[i]=='F'){
        cout<<D[i]<<"\t\t\t"<<A[i]<<"\t\t"<<'F'<<endl;
    }
    else{
        cout<<D[i]<<"\t\t\t"<<A[i]<<"\t\t"<<'T'<<endl;
    }

}




}




************************************************************    B > (P V Q) v (~P ^ ~Q)  ************************************************************




#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};



char C[8]={};
cout<<"\nP "<<'\t'<<"Q"<<'\t'<<"P V Q"<<endl;
for(int i=0;i<4;i++){
if(P[i]=='F'&&Q[i]=='F'){
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        C[i]='F';
    }
    else{
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
         C[i]='T';
    }

}



for(int i=0;i<4;i++){

    if(P[i]=='T'){
        P[i]='F';
    }
    else
        P[i]='T';
}

for(int i=0;i<4;i++){

    if(Q[i]=='T'){
        P[i]='F';
    }
    else
        Q[i]='T';
}



char D[8]={};

cout<<"\n ~P "<<'\t'<<"~Q"<<'\t'<<"~P ^ ~Q"<<endl;
for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='T'){

        D[i]='T';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;

    }


    else{
            D[i]='F';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    }
}


cout<<"\n P V Q "<<'\t'<<"~P ^ ~Q"<<'\t'<<"(P V Q) v (~P ^ ~Q)"<<endl;
for(int i=0;i<4;i++){
if(C[i]=='F'&&D[i]=='F'){
        cout<<C[i]<<'\t'<<D[i]<<'\t'<<'F'<<endl;

    }
    else{
        cout<<C[i]<<'\t'<<D[i]<<'\t'<<'T'<<endl;
    }

}






}




************************************************************  C > (P V Q) ->(P->Q)  ************************************************************
#include<iostream>

using namespace std;

int main(){

char P[4]={'T','T','F','F'};
char Q[4]={'T','F','T','F'};



char D[8]={};
cout<<"\nP "<<'\t'<<"Q"<<'\t'<<"P V Q"<<endl;
for(int i=0;i<8;i++){

    if(P[i]=='T'&&Q[i]=='T'){


        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
        D[i]='T';
    }


    else{
            D[i]='F';
        cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
    }
}


cout<<"P"<<'\t'<<"Q"<<'\t'<<"P->Q"<<endl;

char C[8]={};
for(int i=0;i<4;i++){

    if(P[i]=='T'&&Q[i]=='F'){
         cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'F'<<endl;
        C[i]='F';

    }

    else{
      cout<<P[i]<<'\t'<<Q[i]<<'\t'<<'T'<<endl;
        C[i]='T';
    }

}


cout<<"P V Q"<<'\t'<<"P->Q"<<'\t'<<"(P V Q) ->(P->Q)"<<endl;


for(int i=0;i<4;i++){

    if(D[i]=='T'&&C[i]=='F')
        cout<<D[i]<<'\t'<<C[i]<<'\t'<<'F'<<endl;

    else
        cout<<D[i]<<'\t'<<C[i]<<'\t'<<'T'<<endl;

}

}


